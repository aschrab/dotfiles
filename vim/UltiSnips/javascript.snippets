extends html

snippet #!
#!/usr/bin/env node
'use strict'

async function main() {
	${VISUAL}$0
}

if (require.main === module) {
	// Running as script
	const [ /* interpreter */ , /* script */, ...files ] = process.argv
	main(files).then(console.log)
		.catch(console.error)
}
endsnippet

snippet req
const ${2:${1/.*\///}} = require('${1:module}')$0
endsnippet

snippet /imp(ort)?/ "Import" br
import { ${2:names} } from '${1:file}'$0
endsnippet

snippet impo "Import" b
import ${2:names} from '${1:file}'$0
endsnippet

snippet class
class ${1:Name} {
	constructor (${2:args}) {
		$3
	}

	$0
}
endsnippet

snippet : "Object property"
${1:key}: ${2:value},$0
endsnippet

snippet Promise "Create a Promise"
new Promise((resolve, reject) => {
	${VISUAL}$0
})
endsnippet

snippet eslint-ignore
// eslint-disable-next-line ${1:tag}$0
endsnippet

snippet log
console.log(\`$1\`)$0
endsnippet

snippet describe
describe('${1:description}', () => {
	${2:${VISUAL}}
})
endsnippet

snippet it
it('${1:description}', () =>
	expect(${2:what}).to.${3}
)$0
endsnippet

# vim: noet sw=2 ts=2
