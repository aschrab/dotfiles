# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

% DOTFILE_DIR = File.dirname(File.absolute_path(__FILE__))

set $mod Mod4

# font for window titles. ISO 10646 = Unicode
font -misc-fixed-medium-r-normal--20-200-*-*-c-100-iso10646-1

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# If app requests focus, set urgency hint instead
focus_on_window_activation urgent

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+t exec i3-sensible-terminal -e tmux

# lock screen
bindsym $mod+Shift+Z exec i3lock

# Toggle showing key presses
bindsym $mod+Control+K exec --no-startup-id ~/.bin/show_keys

# kill focused window
bindsym $mod+Shift+Q kill
bindsym $mod+Shift+X kill

# start dmenu (a program launcher)
bindsym $mod+d exec i3-dmenu-desktop

# volume control
bindSym XF86AudioRaiseVolume  exec --no-startup-id "amixer -q set Master 5%+"
bindSym XF86AudioLowerVolume  exec --no-startup-id "amixer -q set Master 5%-"
bindSym XF86AudioMute         exec --no-startup-id "amixer -q set Master toggle"

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+J move left
bindsym $mod+Shift+K move down
bindsym $mod+Shift+L move up
bindsym $mod+Shift+colon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

bindsym $mod+Control+Left move workspace to output left
bindsym $mod+Control+Right move workspace to output right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, default)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout default

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus parent/child container
bindsym $mod+bracketleft  focus parent
bindsym $mod+bracketright focus child
bindsym $mod+comma        focus parent
bindsym $mod+period       focus child

bindsym $mod+Shift+S exec scrot -z "<%= ENV['HOME'] %>/Pictures/screenshot_%F_%T.png"
bindsym --release $mod+Shift+W exec scrot -zsb "<%= ENV['HOME'] %>/Pictures/screenshot_%F_%T.png"

bindsym $mod+a exec --no-startup-id "<%= DOTFILE_DIR %>/i3/workspace-exec i3 workspace %s"
bindsym $mod+Shift+A exec --no-startup-id "<%= DOTFILE_DIR %>/i3/workspace-exec i3 move container to workspace %s"
bindsym $mod+Control+A exec --no-startup-id "<%= DOTFILE_DIR %>/i3/workspace-exec 'i3 move container to workspace %s; i3 workspace %s'"
bindsym $mod+Control+r exec --no-startup-id "<%= DOTFILE_DIR %>/i3/workspace-exec i3 rename workspace to %s"

# move focused container to workspace
% symbols = %w{exclam at numbersign dollar percent asciicircum ampersand asterisk parenleft parenright}
<%- symbols.each.with_index(1) do |sym,num| -%>
bindsym $mod+<%= num % 10 %> workspace number <%= num %>
bindsym $mod+Shift+<%= sym %> move container to workspace number <%= num %>
<%- end -%>

workspace_auto_back_and_forth yes

# reload the configuration file
bindsym $mod+Shift+C reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+R restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+E exit

# Read 1 character and mark the current window with this character
bindsym $mod+m exec i3-input -F 'mark %s' -l 1 -P 'Mark: '
# Read 1 character and go to the window with the character
bindsym $mod+g exec i3-input -F '[con_mark="%s"] focus' -l 1 -P 'Go to: '

bindsym $mod+slash exec i3-input -F '[title="(?i)%s"] focus' -P 'Find window title: '

bindsym $mod+Shift+I move scratchpad
bindsym $mod+i scratchpad show

bindsym $mod+Tab exec true

bindsym $mod+o exec /home/ats/bin/rotate -r

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left  resize shrink width  10 px or 10 ppt
        bindsym Up    resize grow   height 10 px or 10 ppt
        bindsym Down  resize shrink height 10 px or 10 ppt
        bindsym Right resize grow   width  10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)

<%
  require 'json'
  displays = JSON.parse(`i3-msg -t get_outputs`) rescue [{}]
  displays.select!{ |m| m['active'] }

  # Put tray on display that extends farthest down, preferring right-most display if tie
  tray = displays.sort_by{ |m| m['rect'].values_at('y','x') }.last['name']

  # Put status on display with highest bottom, preferring left-most if tie
  status = displays.sort_by{ |m| m['rect'].values_at('y','x') }.first['name']

  # Sort from left to right, top to bottom
  displays.sort_by!{ |m| m['rect'].values_at(*%w<x y>) }

displays.each_with_index do |m,i| -%>
bar {
        position bottom
        output <%= m['name'] %>
<%- if m['name'] == status -%>
        status_command i3status
<%- end -%>
        separator_symbol " | "
        tray_output <%= tray %>
}
bindsym $mod+Control+<%=i+1%> move workspace to output <%= m['name'] %>
% end

for_window [class="Gitk"] floating enable
for_window [class="^Display\.im"] floating enable
for_window [title="^Open Database -"] floating enable
for_window [title="^xfce4-notifyd"] floating enable

exec --no-startup-id "<%= DOTFILE_DIR %>/i3/startup"

# vim: filetype=eruby.conf
