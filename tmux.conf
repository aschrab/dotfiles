set -g prefix C-o
set -g prefix2 C-Space
bind o send-prefix
bind C-o last-window
bind Space next-window
bind C-Space next-window
bind D confirm-before -p "Power detach?" "detach -P"

set -g status-fg colour231
set -g status-bg colour234
set -g status-left-length 15
set -g status-left '#[fg=colour16,bg=colour254,bold]#{=5:session_name}@#{=5:host_short}#[fg=colour254,bg=colour234,nobold] '
set -g status-right '#{?client_prefix,¶, }'
set -g window-status-format "#[fg=colour244,bg=colour234]#I#[fg=colour240]#[fg=colour249]#T "
set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I#[fg=colour231,bold]#T #[fg=colour31,bg=colour234,nobold]"
set -ga update-environment " SSH_CLIENT SSH_CONNECTION"
if 'tmux set -g status-position top' 'source /dev/null'

set -g set-titles on
set -g set-titles-string '#S:#I.#P #T'
set -ga terminal-overrides ',gnome*:XT'
set -g default-terminal 'screen-256color'
set-option -sg escape-time 10
if '[ -x /bin/zsh ]' 'set -g default-shell /bin/zsh'

set-window-option -g xterm-keys on
set-window-option -g mode-keys vi
set-window-option -g automatic-rename off
set-window-option -g aggressive-resize on
set-window-option -g alternate-screen off
set-window-option -g history-limit 5000

set -g mouse on

set -g repeat-time 1000
bind-key Up    select-pane -U
bind-key Down  select-pane -D
bind-key Left  select-pane -L
bind-key Right select-pane -R
bind-key k     select-pane -U
bind-key j     select-pane -D
bind-key h     select-pane -L
bind-key l     select-pane -R

# Smart pane switching with awareness of vim splits
bind -n C-h if "expr '#{pane_title}' : 'Vim@.*'" 'send-keys C-h' 'select-pane -L'
bind -n C-j if "expr '#{pane_title}' : 'Vim@.*'" 'send-keys C-j' 'select-pane -D'
bind -n C-k if "expr '#{pane_title}' : 'Vim@.*'" 'send-keys C-k' 'select-pane -U'
bind -n C-l if "expr '#{pane_title}' : 'Vim@.*'" 'send-keys C-l' 'select-pane -R'

bind C-l send-keys 'C-l'

bind c   new-window   -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind '|' split-window -c "#{pane_current_path}" -h

if '[ -c /dev/machtrace ]' 'set-option -g default-command "reattach-to-user-namespace -l zsh"'
if '[ -c /dev/machtrace ]' 'bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"' 'bind-key -t vi-copy Enter copy-pipe "xclip -in"'
if '[ -c /dev/machtrace ]' 'bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"'

unbind -T root WheelUpPane
unbind -T root WheelDownPane
# Do mouse wheel-up to enter copy mode and do page-up
# https://groups.google.com/d/msg/tmux-users/XTrSVUR15Zk/3iyJLMyQ7PwJ
# Below binding did not work
#   bind -T root WheelUpPane if -Ft= '#{mouse_any_flag}' 'if -Ft= "#{pane_in_mode}" "copy-mode -u" "send-keys -M"' 'copy-mode -u'
# Below works and allows the WheelUpPane binding in vi-copy table to be effective
bind -T root WheelUpPane if -Ft= '#{mouse_any_flag}' 'send-keys -M' 'if -Ft= "#{pane_in_mode}" "send-keys -M" "copy-mode -eu"'

# *** Wheel scroll in pane WHILE in copy-mode
# Once in copy-mode, mouse wheel scrolls scrolls by half pages
bind -t vi-copy WheelUpPane   halfpage-up
bind -t vi-copy WheelDownPane halfpage-down

if '[ -c /dev/machtrace ]' 'bind -t vi-copy MouseUp1Pane copy-pipe "reattach-to-user-namespace pbcopy"' 'bind -t vi-copy MouseUp1Pane copy-pipe "/usr/bin/xclip -in"'

#new-session -s dflt
