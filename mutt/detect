%# vim: ft=eruby
% require 'muttrc.rb'

% if File.stat "#{ENV['HOME']}/.mutt/aliases"
	source ~/.mutt/aliases
% end

% if %w(pug milamber).include? ENV['host']
  account-hook ats@pug.qqx.org 'set tunnel="dovecot --exec-mail imap"'
  set editor="twrap vim '+/^$/+1'"
% end

% alternates = [ ]
% alternates << '(aaron|root|master|ats|bofh)@sc[h]rab\.com'
% alternates << '@pug\.qqx\.org'
% alternates << '[hp]ostmaster@qqx\.org'
%
% if mutt_variable :alternates
  set alternates = '(<%= alternates.join('|') %>)'
% else
%   alternates.each do |alt|
  alternates '<%= alt %>'
%   end
% end

% if mutt_variable :text_flowed
  set text_flowed
% end

% if mutt_variable :imap_idle
  set imap_idle=yes
% end

% if mutt_variable :header_cache
  set header_cache=<%= ENV['HOME'] %>/.cache/mutt
% end

% if mutt_variable :list_reply
  set list_reply=ask-no # When replying to a list message ask if it should go to entire list
% end

% if mutt_feature :compressed
  open-hook   '\.gz$' "gzip -cd %f > %t"
  close-hook  '\.gz$' "gzip -c %t > %f"
  append-hook '\.gz$' "gzip -c %t >> %f"
% end

% if mutt_variable :xterm_title
  set xterm_set_titles
  set xterm_title="Mutt %f %n/%m"
% end

% spam_fmt=''
% if mutt_variable :spam_separator
%#  spam '^X-Spam-Status: (Yes|No), (score|hits)=(-?[0-9.]+)' '%3'
    spam '^X-qqx-org-MailScanner-SpamCheck:.*(score|hits)=(-?[0-9.]+)' '%2'
    set imap_headers="X-qqx-org-MailScanner-SpamCheck"
    folder-hook 'suspect' 'set sort=spam'
%   spam_fmt = ' <%4.4H>';
% end

% if mutt_patch %r<date_conditional>
%   date_fmt = '%?[330d?%\\\\?[18h\\\\?%[%H:%M ]\\\\&%[%d/%b]\\\\?&%[%bâ€™%y]?'
% else
%   date_fmt = '%[%m/%d]'
% end


macro index i ":set hdr_format=\'%5C %Z <%=date_fmt%>  %-15.15F (%5l) %s\'\n"
macro index I ":set hdr_format=\'%5C %Z <%=date_fmt%>  %-15.15L (%5l) %s\'\n"
set hdr_format="%5C %Z <%=date_fmt%>  %-15.15L (%5l) %s"
folder-hook '(INBOX|Mail|spool)'	"set hdr_format=\'%5C %Z <%=date_fmt%>  %-15.15L (%5l) %s\'"
folder-hook '(L(ists)?|Read)'		"set hdr_format=\'%5C %Z <%=date_fmt%>  %-15.15F (%5l) %s\'"
folder-hook '(suspect|spam)'		"set hdr_format=\'%5C %Z <%=date_fmt%>  %-15.15F (%5l)<%=spam_fmt%> %s\'"

% if mutt_variable :see_old
  set see_old
% elsif mutt_version > mutt_version('1.5.6')
  set nomark_old
% else
  set mark_old read_only
% end

% if mutt_version > mutt_version('1.4')
  set smime_default_key="12345678.0"
  set crypt_verify_sig=yes
  set smime_certificates="~/.smime/certificates"
  set smime_keys="~/.smime/keys"
  set smime_pk7out_command="openssl smime -verify -in %f -noverify -pk7out"
  set smime_get_cert_command="openssl pkcs7 -print_certs -in %f"
  set smime_get_signer_cert_command="openssl smime -verify -in %f -noverify -signer %c -out /dev/null"
  set smime_get_cert_email_command="openssl x509 -in  %f -noout -email"
  set smime_import_cert_command="smime_keys add_cert %f"
  set smime_decrypt_command="openssl smime -decrypt  -passin stdin -inform DER -in %f -inkey %k -recip %c"
  set smime_verify_command="openssl smime -verify -inform DER -in %s %C -content %f"
  set smime_verify_opaque_command="openssl smime -verify -inform DER -in %s %C"
% end
