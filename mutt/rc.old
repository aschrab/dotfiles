# vim: tw=0 ft=muttrc
unlists *
unalias *
unhook *

source ~/.Mutt/rc.common
set editor="xfix -s -- vim '+/^$/+1'"

# Since a lot of software claims that cp1252 encoded text is actually
# iso-8859-1, and the former is a superset of the latter, just allow it.
charset-hook ^iso-8859-1$ cp1252

auto_view application/x-zip-compressed application/msword text/x-sh
auto_view application/x-gtar application/x-tar application/x-tar-gz text/x-csrc

#set sendmail="/usr/lib/sendmail -oi -oem"
set ispell="/home/aarons/bin/spell"

set from="aaron@schrab.com"
my_hdr Bcc: backup@schrab.com
set hostname="frell.qqx.org"

source ~/.Mutt/ignore

set date_format = "!%H:%M %Z %d %b %Y"
set attribution="At %d, %?F?%f&I? wrote:"
#set hdr_format="%4C %Z %?[?%[%H:%M]&%[%m/%d]? %-15.15L (%5l) %s"
#source "exec index_format|"
source "exec dynmuttrc|"
#set xterm_icon='Mutt:%f%r [Msgs:%?M?%M/?%m New:%n%?t? Tag:%t? In:%b%?p? Post:%p?]'
#set xterm_title='%f%r [%?M?%M/%m ?%nn%?t? %tt? %bi%?p? %pp?]'
#set xterm_set_titles

set hide_top_missing hide_missing=no

source /home/aarons/.Mutt/aliases

set alias_file=~/.Mutt/aliases

set tmpdir=/tmp/$USER

set keep_flagged
set save_name                  # save messages in folder named for addressee
#set see_old
#set skip_old
#set pgp_default_version="pgp5"
source ~/.Mutt/gpg.rc
#set pgp_sign_as="0xE8D1D751"
set pgp_sign_as="0x0507D84E"
set pgp_verify_sig=yes         # Verify signature automatically
set pgp_replyencrypt
set pgp_replysign
set pgp_good_sign="^gpg: Good signature from"

send-hook   .         "unmy_hdr From"

folder-hook .         "set nostrict_threads nosave_empty sort=threads weed"
folder-hook .         "set mime_forward=ask-yes forward_decode nomark_old"
folder-hook .         'set sort_aux=last-date to_chars=" +TCFL"'
#folder-hook .         \
# "set quote_regexp='^([]:})>|!%] ?|([~<]|-+)[|>]| {0,4}[:>|]|[a-z]+[>|]+ ?|=([^=0-9]|$))'"

folder-hook suspect   "set mime_forward=no noforward_decode"

folder-hook .		'macro pager	S	"<save-message>=notsuspect<enter>"	"File spam"'
folder-hook .		'macro index	S	"<save-message>=notsuspect<enter>"	"File spam"'
folder-hook =suspect	'macro pager	S	"<pipe-message>spamassassin -d | refilter\n<delete-message>"	"Undo spamassassin"'
folder-hook =suspect	'macro index	S	"<pipe-message>spamassassin -d | refilter\n<delete-message>"	"Undo spamassassin"'

folder-hook Mail      "set move=yes"
#folder-hook Mail      "set hdr_format='%4C %Z %?[?%[%H:%M]&%[%m/%d]? %-15.15L (%5l) %s'"

#folder-hook Lists     "set hdr_format='%4C %Z %?[?%[%H:%M]&%[%m/%d]? %-15.15F (%5l) %s'"
folder-hook L(ists)?/     'set save_empty to_chars=" +TCF "'

#folder-hook spool     "set hdr_format='%4C %Z %?[?%[%H:%M]&%[%m/%d]? %-15.15L (%5l) %s'"
folder-hook spool     "set move=no"
#folder-hook misc      "push 'D~t cricket\n'"

folder-hook L(ists)?/inet		"source ~/.Mutt/expire"
folder-hook L(ists)?/allgurus		"set move=no"
folder-hook L(ists)?/yesno		"set move=no"
folder-hook L(ists)?/user-account	"set move=no"
folder-hook L(ists)?/mutt		"set move=no"
folder-hook L(ists)?/mlug-org		"set move=no"
folder-hook L(ists)?/mlug-board		"set move=no"
folder-hook L(ists)?/fdllug		"set move=no"
folder-hook L(ists)?/rexml		"set move=no"
folder-hook L(ists)?/securelinux	"source ~/.Mutt/expire"
folder-hook L(ists)?/sawmill		"source ~/.Mutt/expire"

#folder-hook (procmail|smartlist) \
#     'set quote_regexp="^([])>%] ?|([~<]|-+)[|>]| {0,4}>|[a-z]+[>|]+ ?|=([^=0-9]|$))"'

folder-hook IN        "set move=no"
folder-hook abuse.net "set move=no sort=last-date"
#folder-hook Read      "set hdr_format='%4C %Z %?[?%[%H:%M]&%[%m/%d]? %-15.15F (%5l) %s'"
folder-hook exser     "set strict_threads"
folder-hook frontpage "set strict_threads"

folder-hook suspect   "set mark_old"

folder-hook notsuspect "set move=no"

send-hook ~A 'unset pgp_autosign'

mailboxes !
mbox-hook spool =IN
mbox-hook backup =Read/backup

mailboxes =L/debian-security-announce
mailboxes =L/mlug-board =L/mlug-board-d1 =L/mlug-board-d2

mailboxes =L/linux-security 
subscribe linux-security linux-alert
mbox-hook L(ists)?/linux-security "=Read/linux-security"

mailboxes =L/bugtraq
subscribe bugtraq
mbox-hook L(ists)?/bugtraq "=Read/bugtraq"

mailboxes =L/lsm-workers
subscribe lsm-workers
mbox-hook L(ists)?/lsm-workers "=Read/lsm-workers"
folder-hook L(ists)?/lsm-workers "set move=no"

mailboxes =L/mlug =L/mlug-org
subscribe mlug-list mlug-org mlug-board mb-d1 mb-d2
mbox-hook L(ists)?/mlug-board-d1 "=Read/mlug-board-d1"
mbox-hook L(ists)?/mlug-board-d2 "=Read/mlug-board-d2"
mbox-hook L(ists)?/mlug-board "=Read/mlug-board"
mbox-hook L(ists)?/mlug-org "=Read/mlug-org"
mbox-hook L(ists)?/mlug "=Read/mlug"
#send-hook mlug my_hdr From: Aaron Schrab <aaron+mlug@schrab.com>

mailboxes =L/wilugs =L/wilugs-help
subscribe fdllug-wlugs members@wilugs.org linuxhelp@wilugs.org
mbox-hook L(ists)?/wilugs-help "=Read/wilugs-help"
mbox-hook L(ists)?/wilugs "=Read/wilugs"
send-hook fdllug-wlugs my_hdr From: Aaron Schrab <aaron@schrab.com>
send-hook @wilugs.org my_hdr From: Aaron Schrab <aaron@schrab.com>

mailboxes =L/fdllug/
subscribe fdllug-list
mbox-hook L(ists)?/fdllug "=Read/fdllug"

mailboxes =L/milwpm
subscribe milwpm@yahoogroups
mbox-hook L(ists)?/milwpm "=Read/milwpm"
send-hook milwpm@yahoogroups my_hdr From: Aaron Schrab <aaron@schrab.com>

mailboxes =L/double-click
subscribe talk-dc
mbox-hook L(ists)?/double-click "=Read/double-click"
send-hook talk-dc 'my_hdr From: Aaron Schrab <aaron@schrab.com>'

mailboxes =L/muug
subscribe muug
mbox-hook L(ists)?/muug "=Read/muug"
send-hook muug my_hdr From: Aaron Schrab <aaron+muug@schrab.com>

mailboxes =rss

mailboxes =L/mutt
subscribe mutt-users mutt-dev
mbox-hook L(ists)?/mutt "=Read/mutt"
send-hook mutt 'my_hdr From: Aaron Schrab <aaron+mutt@schrab.com>'
#send-hook mutt 'set pgp_autosign'

mailboxes =L/fox
subscribe foxgui-users
mbox-hook L(ists)?/fox =Read/fox

mailboxes =L/fxruby-users
subscribe fxruby-users
mbox-hook L(ists)?/fxruby-users =Read/fxruby-users

mailboxes =L/ruby-dbi
subscribe ruby-dbi-devel
mbox-hook L(ists)?/ruby-dbi =Read/ruby-dbi

mailboxes =L/rexml
subscribe ser-rexml@germane-software\.com

mailboxes =L/modruby
subscribe modruby
mbox-hook L(ists)?/modruby =Read/modruby

mailboxes =L/narf
subscribe narf-lib-devel
mbox-hook L(ists)?/narf =Read/narf

mailboxes =L/asterisk-dev
subscribe asterisk-dev
mbox-hook L(ists)?/asterisk-dev =Read/asterisk-dev

mailboxes =L/asterisk-users
subscribe asterisk-users
mbox-hook L(ists)?/asterisk-users =Read/asterisk-users

mailboxes =L/ifp
subscribe ifp-driver-common
mbox-hook L(ists)?/ifp =Read/ifp

mailboxes =L/list-managers
subscribe list-managers
mbox-hook L(ists)?/list-managers "=Read/list-managers"
send-hook list-managers my_hdr From: Aaron Schrab <aaron+lm@schrab.com>

mailboxes =L/digitaltraveler
subscribe digitaltraveler
mbox-hook L(ists)?/digitaltraveler "=Read/digitaltraveler"
send-hook digitaltraveler my_hdr From: Aaron Schrab <aaron@schrab.com>

mailboxes =L/black-cat
subscribe black-cat
mbox-hook L(ists)?/black-cat "=Read/black-cat"
send-hook black-cat my_hdr From: Aaron Schrab <aaron@schrab.com>

mailboxes =L/audit
subscribe security-audit
mbox-hook L(ists)?/audit "=Read/audit"
send-hook security-audit my_hdr From: Aaron Schrab <aaron+lsa@schrab.com>

mailboxes =L/secprog
subscribe secprog@securityfocus.com
mbox-hook L(ists)?/secprog "=Read/secprog"
send-hook secprog@securityfocus.com my_hdr From: Aaron Schrab <aaron@schrab.com>

mailboxes =L/securelinux
subscribe securelinux
mbox-hook L(ists)?/securelinux "=Read/securelinux"
send-hook securelinux my_hdr From: Aaron Schrab <aaron+sl@schrab.com>

mailboxes =L/rblcheck-users
subscribe rblcheck-users
mbox-hook L(ists)?/rblcheck-users "=Read/rblcheck-users"
send-hook rblcheck-users 'my_hdr From: Aaron Schrab <aaron@schrab.com>'

mailboxes =L/spamtools
subscribe spamtools
mbox-hook L(ists)?/spamtools "=Read/spamtools"
# This send-hook is later, after the general one for abuse.net
#send-hook spamtools my_hdr From: Aaron Schrab <aaron+spamtools@schrab.com>

mailboxes =L/ruby-core
subscribe ruby-core
mbox-hook L(ists)?/ruby-core =Read/ruby-core

mailboxes =L/ruby-talk
subscribe ruby-talk
mbox-hook L(ists)?/ruby-talk =Read/ruby-talk

mailboxes =L/galeon-user
subscribe galeon-user
mbox-hook L(ists)?/galeon-user "=Read/galeon-user"
send-hook galeon-user 'my_hdr From: Aaron Schrab <aaron+galeon@schrab.com>'

mailboxes =L/irmp3
subscribe irmp3
mbox-hook L(ists)?/irmp3 "=Read/irmp3"
send-hook irmp3 my_hdr From: Aaron Schrab <aaron+irmp3@schrab.com>

mailboxes =L/mp3stereo
subscribe mp3stereo
mbox-hook L(ists)?/mp3stereo "=Read/mp3stereo"
send-hook mp3stereo my_hdr From: Aaron Schrab <aaron+mp3stereo@schrab.com>

mailboxes =L/lirc
subscribe lirc
mbox-hook L(ists)?/lirc "=Read/lirc"
send-hook lirc my_hdr From: Aaron Schrab <aaron+lirc@schrab.com>

mailboxes =L/hfs
subscribe hfs-interest
mbox-hook L(ists)?/hfs "=Read/hfs"

mailboxes =L/secure-mua
subscribe secure-mua dev@smime.pyerotechnics.com
mbox-hook L(ists)?/secure-mua "=Read/secure-mua"
send-hook secure-mua@egroups 'my_hdr From: <u.utkroyz34ius-h.700a5@pug.qqx.org>'
send-hook dev@smime 'my_hdr From: Aaron Schrab <aaron+mutt@schrab.com>'

mailboxes =L/screen
subscribe gnu-screen@egroups.com
mbox-hook L(ists)?/screen "=Read/screen"
send-hook gnu-screen@egroups 'my_hdr From: <u.utkroyz34ius-h.700a5@pug.qqx.org>'

mailboxes =L/jeremiah
subscribe Jeremiah_Series@yahoogroups.com
mailboxes L/jeremiah "=Read/jeremiah"

mailboxes =L/mol-general
subscribe mol-general
mbox-hook L(ists)?/mol-general "=Read/mol-general"
send-hook maconlinux.org 'my_hdr From: Aaron Schrab <aaron@schrab.com>'

mailboxes `ls -tCdw9999 ~/Mail/L/debian-*`
mailboxes =L/debian-pts
subscribe `ls -tCdw9999 ~/Mail/L/debian-* | sed -e 's,\(^\| \)[^ ]*/,,g'`
lists debian-
#subscribe debian-mentors debian-powerpc debian-devel
mbox-hook L(ists)?/debian-mentors "=Read/debian-mentors"
mbox-hook L(ists)?/debian-powerpc "=Read/debian-powerpc"
mbox-hook L(ists)?/debian-pts "=Read/debian-pts"
mbox-hook L(ists)?/debian-devel "=Read/debian-devel"
mbox-hook L(ists)?/debian-project "=Read/debian-project"
mbox-hook L(ists)?/debian "=Read/debian"
send-hook debian.org 'my_hdr From: Aaron Schrab <aaron@schrab.com>'

mailboxes =L/sup
subscribe suplist
mbox-hook L(ists)?/sup "=Read/sup"
send-hook suplist@whitefang my_hdr From: Aaron Schrab <aaron+sup@schrab.com>

mailboxes =L/trn
subscribe trn-users
mbox-hook L(ists)?/trn "=Read/trn"
send-hook trn 'my_hdr From: Aaron Schrab <aaron+trn@schrab.com>'

mailboxes =L/redhat

mailboxes =L/zsh 
subscribe zsh-users zsh-workers
mbox-hook L(ists)?/zsh "=Read/zsh"
send-hook zsh 'my_hdr From: Aaron Schrab <aaron+zsh@schrab.com>'

mailboxes =L/procmail-dev
subscribe procmail-dev
mbox-hook L(ists)?/procmail-dev "=Read/procmail-dev"
send-hook procmail-dev 'my_hdr From: Aaron Schrab <aaron+procmail@schrab.com>'

mailboxes =L/smartlist-dev
subscribe smartlist-dev
mbox-hook L(ists)?/smartlist-dev "=Read/smartlist-dev"
send-hook smartlist-dev 'my_hdr From: Aaron Schrab <aaron+procmail@schrab.com>'

mailboxes =L/smartlist
subscribe smartlist
mbox-hook L(ists)?/smartlist "=Read/smartlist"
send-hook smartlist my_hdr From: Aaron Schrab <aaron+smartlist@schrab.com>

mailboxes =L/sympa-users
subscribe sympa-users@cru.fr
mbox-hook L(ists)?/sympa-users "=Read/sympa-users"
send-hook sympa my_hdr From: Aaron Schrab <aaron+sympa@schrab.com>

mailboxes =L/procmail
subscribe procmail
mbox-hook L(ists)?/procmail "=Read/procmail"
send-hook procmail 'my_hdr From: Aaron Schrab <aaron+procmail@schrab.com>'

mailboxes =L/linux-pmac
lists linux-pmac
mbox-hook L(ists)?/linux-pmac "=Read/linux-pmac"
send-hook linux-pmac 'my_hdr From: Aaron Schrab <aaron+pmac@schrab.com>'

mailboxes =L/crypto
subscribe crypto
mbox-hook L(ists)?/crypto "=Read/crypto"

mailboxes =L/livingston-radius
lists portmaster-radius
mbox-hook L(ists)?/livingston-radius "=Read/livingston-radius"
mailboxes =L/radius-ietf
subscribe radius-ietf
mbox-hook L(ists)?/radius-ietf "=Read/radius-ietf"
send-hook radius 'my_hdr From: Aaron Schrab <aaron+radius@schrab.com>'

mailboxes =L/bt
lists bt-list
mbox-hook L(ists)?/bt =Read/bt

mailboxes =L/tidbits
subscribe tidbits-talk
mbox-hook L(ists)?/tidbits "=Read/tidbits"
send-hook tidbits 'my_hdr From: Aaron Schrab <aaron@schrab.com>'
folder-hook tidbits 'set sort_aux=last-date'

mailboxes =misc =suspect =qqx.org
mbox-hook suspect "=spam"

send-hook warrior            "my_hdr From: Aaron Schrab <aaron@schrab.com>"
send-hook schrab             "my_hdr From: Aaron Schrab <aaron@schrab.com>"
send-hook abuse\.net         "my_hdr From: Aaron Schrab <aarons@execpc.com>"
# send-hook for the spamtools list, here because of above send-hook
send-hook spamtools my_hdr From: Aaron Schrab <aaron+spamtools@schrab.com>

fcc-save-hook '~C imdb\.com'          "=imdb"
save-hook "~C manager@execpc" "=manager"
fcc-save-hook "~C modem-report"       "=modem"
save-hook randy@thisistrue "=true"

fcc-save-hook d(avid@)?schrab    "=david@schrab.com"
fcc-save-hook jschrab            "=j_schrab"
fcc-save-hook sschrab@royle      "=steven@schrab.com"
fcc-save-hook sschrab@execpc     "=steven@schrab.com"
fcc-save-hook ryan@inc.net       "=ryan@inc.net"
fcc-save-hook gamegrotto         "=deannah"
fcc-save-hook unicorn@execpc     "=cathyann"
fcc-save-hook cert\.org          "=cert"
fcc-save-hook internic\.net      "=internic"
fcc-save-hook morwen             "=lam"
fcc-save-hook lori@compulsive    "=lam"
fcc-save-hook shadows@execpc     "=davisb"
fcc-save-hook warrior\.mscs      "=mcs"
fcc-save-hook joegreco           "=jgreco"
fcc-save-hook jimpick\.com       "=jimpick"
fcc-save-hook liw@iki\.fi        "=liw@iki.fi"
fcc-save-hook merlen@triangle    "=merlen@triangle.org"
fcc-save-hook mlb@pobox          "=mlb@pobox.com"
fcc-save-hook steve@inc\.net     "=steve@inc.net"
fcc-save-hook tchrist            "=tchrist@perl.com"
fcc-save-hook ferguson@execpc    "=wayne"
fcc-save-hook stephenh@execpc    "=stephen"
fcc-save-hook abuse\.net         "=abuse.net"
fcc-save-hook @orbs\.org         "=orbs"
fcc-save-hook relays@radparker   "=rrss"
fcc-save-hook eric@bernafamily   "=eric@bernafamily.com"
fcc-save-hook jbaker@police.wauwatosa.wi.us "=joebaker"
fcc-save-hook skepticmag@aol.com "=skeptic.com"
fcc-save-hook support@paytrust.com "=billmanager"

save-hook mlug-list          "=mlug"
save-hook execpc-circuit-users "=execpc-circuit-users"
save-hook scud-request       "=scud.req"
save-hook this-is-true-admin "=true"
save-hook @netflix           "=netflix"
save-hook '~C @lists\.debian\.org' "=debian"
save-hook @billmanager.accountonline "=billmanager"
save-hook '~h ^list-unsubscribe:.*stellaaward' "=stellaawards"

# -*-muttrc-*-
## The following options are only available if you have
## compiled in S/MIME support

# If you compiled mutt with support for both PGP and S/MIME, PGP
# will be the default method unless the following option is set
#set smime_is_default

# Uncoment this if you don't want to set labels for certificates you add.
# unset smime_ask_cert_label

# Passphrase expiration
set smime_timeout=300

# Global crypto options -- these affect PGP operations as well.
#set crypt_autosign = yes
set crypt_replyencrypt = yes
set crypt_replysign = yes
set crypt_replysignencrypted = yes
set crypt_verify_sig = yes

# Section A: Key Management.

# The (default) keyfile for signing/decrypting.  Uncomment the following
# line and replace the keyid with your own.
set smime_default_key="12345678.0"

# Uncommen to make mutt ask what key to use when trying to decrypt a message.
# It will use the default key above (if that was set) else.
# unset smime_decrypt_use_default_key

# Path to a file or directory with trusted certificates
set smime_ca_location="~/.smime/ca-bundle.crt"

# Path to where all known certificates go. (must exist!)
set smime_certificates="~/.smime/certificates"

# Path to where all private keys go. (must exist!)
set smime_keys="~/.smime/keys"

# These are used to extract a certificate from a message.
# First generate a PKCS#7 structure from the message.
set smime_pk7out_command="openssl smime -verify -in %f -noverify -pk7out"

# Extract the included certificate(s) from a PKCS#7 structure.
set smime_get_cert_command="openssl pkcs7 -print_certs -in %f"

# Extract the signer's certificate only from a S/MIME signature (sender verification)
set smime_get_signer_cert_command="openssl smime -verify -in %f -noverify -signer %c -out /dev/null"

# This is used to get the email address the certificate was issued to.
set smime_get_cert_email_command="openssl x509 -in  %f -noout -email"

# Add a certificate to the database using smime_keys.
set smime_import_cert_command="smime_keys add_cert %f"



# Sction B: Outgoing messages

# Algorithm to use for encryption.
# valid choices are rc2-40, rc2-64, rc2-128, des, des3
set smime_encrypt_with="des3"

# Encrypt a message. Input file is a MIME entity.
set smime_encrypt_command="openssl smime -encrypt -%a -outform DER -in %f %c"

# Sign.
set smime_sign_command="openssl smime -sign -signer %c -inkey %k -passin stdin -in %f -certfile %i -outform DER"



#Section C: Incoming messages

# Decrypt a message. Output is a MIME entity.
set smime_decrypt_command="openssl smime -decrypt  -passin stdin -inform DER -in %f -inkey %k -recip %c"

# Verify a signature of type multipart/signed
set smime_verify_command="openssl smime -verify -inform DER -in %s %C -content %f"

# Verify a signature of type application/x-pkcs7-mime
set smime_verify_opaque_command="openssl smime -verify -inform DER -in %s %C"



# Section D: Alternatives

# Sign.  If you wish to NOT include the certificate your CA used in signing
# your public key, use this command instead.
# set smime_sign_command="openssl smime -sign -signer %c -inkey %k -passin stdin -in %f -outform DER"
#
# In order to verify the signature only and skip checking the certificate  chain:
#
# set smime_verify_command="openssl smime -verify -inform DER -in %s -content %f -noverify"
# set smime_verify_opaque_command="openssl smime -verify -inform DER -in %s -noverify"
#
