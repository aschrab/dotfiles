# vim: ft=gitconfig tabstop=4 shiftwidth=4
[user]
	name          = Aaron Schrab
	email         = aaron@schrab.com
	useconfigonly = true
	signingkey    = 6DB5C725

[init]
	templatedir = ~/.git_template

[advice]
	statusHints = no

[log]
	abbrevCommit = true

[url "ssh://pug.qqx.org/srv/git/"]
	pushInsteadOf = http://git.qqx.org/
	pushInsteadOf = git://git.qqx.org/
[url "git://github.com/"]
	insteadOf = https://github.com/
[url "ssh://git@github.com/"]
	insteadOf = gh:
	pushInsteadOf = git://github.com/
	pushInsteadOf = https://github.com/
	pushInsteadOf = gh:
[url "git@bitbucket.org:aschrab/"]
	pushInsteadOf = https://bitbucket.org/aschrab/
[url "git@github.com:sunbirddcim/"]
	insteadOf = git@github.com:raritan/
	insteadOf = ssh://git@github.com/raritan/
	insteadOf = https://github.com/raritan/poweriq_web.git

[core]
	pager        = less -R
	#autocrlf    = input
	safecrlf     = true
	excludesfile = ~/.gitignore
	preloadindex = yes
	commentChar  = !

[diff]
	renames        = true
	mnemonicprefix = yes
	algorithm      = patience
	#algorithm      = histogram # Too new for some of the systems I use

[merge]
	conflictstyle = diff3
	defaultToUpstream = yes
	log = 999

[mergetool "fugitive"]
	cmd = vim -f -c "Gdiff" "$MERGED"

[rerere]
	enabled = yes
	autoupdate = yes

[alias]
	g           = "!f() { git $@; }; f"
	git         = "!f() { git $@; }; f"
	root        = rev-parse --show-toplevel
	co          = checkout
	ci          = commit -v
	cia         = commit -v -a
	d           = diff
	dif         = diff
	ds          = diff --staged
	id          = log -1 --format=%h
	sh          = show
	sho         = show
	st          = status -sb
	b           = branch
	pick        = cherry-pick
	up          = "!echo Use pull >&2 ; exit 1"
	ff          = pull --ff-only
	l1          = log --pretty=format:"'%C(yellow)%h %C(green)%aN %C(blue)%ar %C(reset)%s'"
	ls          = log --decorate --graph --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]"
	ll          = log --decorate --numstat --date=short --pretty=format:"%C(yellow)%ad\\ %h%Cred%d\\ %Creset%s%Cblue\\ [%cn]"
	tree        = "!f() { git ls ^$(git show-branch --merge-base $@)^ $@ --; }; f"
	last        = log --stat -p -1 HEAD
	stashed     = stash list --pretty='%gd: %Cred%h%Creset %Cgreen[%ar]%Creset %s'
	unstage     = reset HEAD --
	pr          = pull-request
	review      = "!f() { for rev in $(git log --reverse --format=%H $@); do git show $rev; done; }; f"
	show-commit = log -1 -p
	lol         = log --graph --decorate --pretty=oneline --abbrev-commit
	push-new-repo = push --receive-pack=git-receive-new-repo --all
	submodule-annotate = submodule foreach "git update-ref refs/heads/submodule-parent $sha1 || true"

[push]
	default = current

[filter "date-prop"]
	clean  = perl -pe 's/,,Date[^,]*,,/,,Date,,/i'
	smudge = perl -pe 's/,,Date[^,]*,,/,,Date: @{[scalar gmtime]},,/i'

[color]
	branch      = auto
	diff        = auto
	interactive = auto
	status      = auto

[color "status"]
	added     = green
	untracked = yellow
	updated   = blue
	changed   = red

[status]
	submodulesummary = true
	showUntrackedFiles = all

[github]
	user = aschrab

[sendemail]
	from           = Aaron Schrab <aaron@schrab.com>
	envelopesender = aaron@schrab.com
	bcc            = aaron@schrab.com
	confirm        = always
	suppresscc     = self
	chainreplyto   = no
	thread         = yes

[upstream]
	urltag = qqx/upstream
[help]
	autocorrect = 15

[git-p4]
	skipSubmitEdit = true
	conflict = quit

[filter "lfs"]
	clean = git lfs clean %f
	smudge = git lfs smudge %f
	required = true
[rebase]
	autosquash = true
[pull]
	ff = only
[http]
	sslCAPath = ~/.certs
